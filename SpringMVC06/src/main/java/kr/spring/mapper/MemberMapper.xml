<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.mapper.MemberMapper">

	<select id="idCheck" parameterType="String" resultType="kr.spring.entity.Member">
		SELECT * FROM MEMBER WHERE MEMID = #{id}
	</select>
	
	<insert id="join" parameterType="kr.spring.entity.Member">
		INSERT INTO MEMBER(MEMIDX, MEMID, MEMPW, MEMNAME, MEMAGE, MEMGENDER, MEMEMAIL, MEMPROFILE)
		VALUES(
		(SELECT IFNULL(MAX(MEMIDX) + 1 ,1) FROM MEMBER MEM),
		#{memId}, #{memPw},#{memName},#{memAge},#{memGender},#{memEmail},#{memProfile})
	</insert>
	<!-- insert는 resultType이 없음 : 기본적으로 int값을 반환하기 때문 -->
	
	<select id="login" resultMap="memberMap">
		SELECT * FROM MEMBER mem LEFT OUTER JOIN AUTH auth 
		ON mem.MEMID = auth.MEMID
		WHERE mem.MEMID = #{username}
	</select>

	<update id="update" parameterType="kr.spring.entity.Member">
		UPDATE MEMBER
		SET MEMPW=#{memPw}, MEMNAME=#{memName}, MEMAGE=#{memAge},
		MEMGENDER=#{memGender}, MEMEMAIL=#{memEmail}, MEMPROFILE=#{memProfile}
		WHERE MEMID=#{memId}
	</update>
	
	<update id="profileUpdate" parameterType="kr.spring.entity.Member">
		UPDATE MEMBER
		SET MEMPROFILE=#{memProfile} WHERE MEMID=#{memId}
	</update>
	
	<select id="getMember" parameterType="String" resultMap="memberMap">
		SELECT * FROM MEMBER mem LEFT OUTER JOIN AUTH auth 
		ON mem.MEMID = auth.MEMID
		WHERE mem.MEMID = #{memId}
	</select>
	
	<resultMap type="kr.spring.entity.Auth" id="authMap">
		<id property="no" column="no"/>
		<result property="memId" column="memId"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<resultMap type="kr.spring.entity.Member" id="memberMap">
		<id property="memIdx" column="memIdx"/>
		<result property="memId" column="memId"/>
		<result property="memPw" column="memPw"/>
		<result property="memName" column="memName"/>
		<result property="memAge" column="memAge"/>
		<result property="memGender" column="memGender"/>
		<result property="memEmail" column="memEmail"/>
		<result property="memProfile" column="memProfile"/>
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap>
	
	<insert id="authInsert" parameterType="kr.spring.entity.Auth">
		INSERT INTO AUTH(MEMID, AUTH) VALUES(#{memId},#{auth})
	</insert>
	
	<delete id="authDelete" parameterType="String">
		DELETE FROM AUTH WHERE MEMID = #{memId}
	</delete>
	
</mapper>