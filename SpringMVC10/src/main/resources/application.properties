# Spring Boot 환경설정하는 파일(DB, 톰캣 등)

# Tomcat Server Port 변경
server.port=8081

# Context Path 수정 -> /boot
# Context Path 수정하지 않으면 기본값 -> /
server.servlet.context-path=/boot

# DB 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/com
spring.datasource.username=com
spring.datasource.password=com01

# Spring JPA 설정(JDBC -> API) -> Hibernate(Spring JPA 구현체)
# Spring 에서는 Mapper Interface -> SqlSessionFactoryBean(Mapper Interface 추상메서드 구현)
# Spring JPA 에서는 Hibernate : SQL Query 빌드(자동생성 -> SQL문까지 알아서 짜줌)
# 사용방법) JPA클래스.save(vo) -> insert into Board(title, content, writer)
#                         values (#{title}, #{content}, #{writer})
# 복잡한 쿼리는 직접 짜야함

# JPA/Hibernate -> ORM(Object Relational Mapping) 방식 : 객체 관계 맵핑 
# 객체를 만들면 해당 관계를 찾아서 맵핑을 해준다!

# MySQL 상세지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 스키마 생성 (create, update)
spring.jpa.hibernate.ddl-auto=update

# JPA가 실행하고 실해된 SQL문장 보기
spring.jpa.show-sql=true

# 실제 JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력
spring.jpa.properties.hibernate.format_sql=true

# Spring Boot ViewResolver 설정
spring.mvc.view.prefix=/WEB-INF/board/
spring.mvc.view.suffix=.jsp


